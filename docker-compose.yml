version: '3.7'

networks:
  internal-network:
    driver: bridge

services:
  nest-gcp:
    # Named containers must be used to stay synchronized with the database host
    # address.
    container_name: nest-gcp
    build:
      # Must be the path to the location of the Dockerfile being built. It will
      # send the whole application (./api folder in this case) to the docker
      # daemon.
      context: .
      # Build only the 'development' part of our application (before the second
      # FROM in the Dockerfile; check ./api/Dockerfile).
      target: development
    volumes:
      # This volume is the key to keep the file's synchronization that enables 
      # live reloading.
      - .:/usr/src/app
      # This anonymous volume prevent overriding the docker's node_modules with
      # our local one (?).
      # - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    # This command will trigger the service, which in the development context
    # means running it with live reloading. But we also need to set the volumes
    # below.
    command: npm run start:dev
    # This env file must be in the same directory of the current
    # docker-compose.yml. 
    env_file: .env
    depends_on:
      - db-gcp
    networks:
      - internal-network

  db-gcp:
    # Named containers must be used to stay synchronized with the database host
    # address.
    container_name: db-gcp
    build: ./db/postgresql
    restart: always
    tty: true
    ports:
      - ${DB_HOST_PORT}:${DB_PORT}
    networks:
      - internal-network
